"""baseline

Revision ID: 40c0f6d462f1
Revises: 
Create Date: 2025-09-06 19:48:09.918938

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '40c0f6d462f1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artifacts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('node_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('summary', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artifacts_node_id'), 'artifacts', ['node_id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.Column('node_id', sa.UUID(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('request_id', sa.String(), nullable=True),
    sa.Column('extra', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_node_id'), 'events', ['node_id'], unique=False)
    op.create_index(op.f('ix_events_request_id'), 'events', ['request_id'], unique=False)
    op.create_index(op.f('ix_events_run_id'), 'events', ['run_id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('node_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('reviewer', sa.String(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('evaluation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedbacks_node_id'), 'feedbacks', ['node_id'], unique=False)
    op.create_index(op.f('ix_feedbacks_run_id'), 'feedbacks', ['run_id'], unique=False)
    op.create_table('nodes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'completed', 'failed', name='nodestatus'), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('deps', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('checksum', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('run_id', 'key', name='uq_nodes_run_key')
    )
    op.create_index(op.f('ix_nodes_key'), 'nodes', ['key'], unique=False)
    op.create_index(op.f('ix_nodes_role'), 'nodes', ['role'], unique=False)
    op.create_table('runs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'completed', 'failed', name='runstatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('runs')
    op.drop_index(op.f('ix_nodes_role'), table_name='nodes')
    op.drop_index(op.f('ix_nodes_key'), table_name='nodes')
    op.drop_table('nodes')
    op.drop_index(op.f('ix_feedbacks_run_id'), table_name='feedbacks')
    op.drop_index(op.f('ix_feedbacks_node_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_events_run_id'), table_name='events')
    op.drop_index(op.f('ix_events_request_id'), table_name='events')
    op.drop_index(op.f('ix_events_node_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_artifacts_node_id'), table_name='artifacts')
    op.drop_table('artifacts')
    # ### end Alembic commands ###
