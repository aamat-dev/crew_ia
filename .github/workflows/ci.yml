name: CI

on:
  push:
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
        node-version: ['18', '20']
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: dashboard/mini/package-lock.json

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
          pip install ruff pytest-cov

      - name: Lint backend
        run: ruff check .

      - name: Test backend
        run: pytest --cov=. --cov-report=xml --cov-report=html --cov-fail-under=85

      - name: Install frontend dependencies
        working-directory: dashboard/mini
        run: npm ci

      - name: Lint frontend
        working-directory: dashboard/mini
        run: npm run lint

      - name: Typecheck frontend
        working-directory: dashboard/mini
        run: npm run typecheck

      - name: Test frontend
        working-directory: dashboard/mini
        run: npm test -- --run --coverage

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}-node${{ matrix.node-version }}
          path: |
            coverage.xml
            htmlcov
            dashboard/mini/coverage

  alembic-heads:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Check Alembic heads
        run: |
          alembic heads
          test $(alembic heads | wc -l) -eq 1

  coverage-merge:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true

      - name: Upload combined coverage
        uses: codecov/codecov-action@v4
        with:
          files: "coverage/**/coverage.xml,coverage/**/lcov.info"
          fail_ci_if_error: false

  deploy-pages:
    needs: lint-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: dashboard/mini/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Installer et build du frontend
        working-directory: dashboard/mini
        run: |
          npm ci
          npm run build

      - name: Upload artifact pour Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dashboard/mini/dist

      - id: deployment
        name: DÃ©ployer sur GitHub Pages
        uses: actions/deploy-pages@v4
